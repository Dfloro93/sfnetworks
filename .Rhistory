library(tmap)
tmap_mode("view")
qtm(sfn_asnetwork(roxel)$nodes)
library(sfnetworks)
qtm(sfn_asnetwork(roxel)$nodes)
library(sf)
st_crs(roxel)
st_crs(roxel)[1]
st_crs(roxel)[2]
st_crs(roxel)[[2]]
devtools::document()
library(sfnetworks)
summary(sfn_asnetwork(roxel))
sfn_asnetwork(roxel) %>% pluck('edges') %>% sf::st_crs()[[1]]
library(tidyverse)
sfn_asnetwork(roxel) %>% pluck('edges') %>% sf::st_crs()[[1]]
sfn_asnetwork(roxel) %>% pluck('edges') %>% sf::st_crs()
sfn_asnetwork(roxel) %>% pluck('edges') %>% sf::st_crs()[1]
st_crs(roxel)
st_crs(roxel)[1]
st_crs(roxel)[[1]]
sfn_asnetwork(roxel) %>% pluck('edges') %>% st_crs()[1]
(sfn_asnetwork(roxel) %>% pluck('edges') %>% st_crs())[1]
devtools::document()
library(sfnetworks)
?sfn_transform
devtools::document()
library(sfnetworks)
devtools::document()
library(sfnetworks)
library(igraph)
?diameter
?degree
library(tmap)
tmap_mode("view")
qtm(sfn_asnetwork(roxel)$nodes)
roxel %>%
sfn_asnetwork() %>%
sfn_network2graph() %>%
igraph::degree(v = V()[name == 350], mode = 'all')
g = roxel %>%
sfn_asnetwork() %>%
sfn_network2graph()
igraph::degree(v = V(g)[name == 350], mode = 'all')
igraph::degree(g, v = V(g)[name == 350], mode = 'all')
head(igraph::degree(g, v = V(g), mode = 'all')
)
igraph::betweenness(g, v = V(g), directed = FALSE) %>% head()
?cluster_edge_betweenness
??sfnetworks
?vignette
vignette(package = 'sfnetworks')
devtools::document()
library(sfnetworks)
devtools::document()
library(sfnetworks)
usethis::use_package("tidyverse", type = "Suggests")
devtools::document()
usethis::use_package("tidyverse", type = "Suggests")
devtools::document()
library(sfnetworks)
devtools::document()
library(sfnetworks)
?plot
?sfn_asnetwork
install.packages("lwgeom")
devtools::document()
library(sfnetworks)
devtools::document()
library(sfnetworks)
require(sfnetworks)
g = roxel %>%
sfn_asnetwork() %>%
sfn_network2graph()
require(tidyverse)
g = roxel %>%
sfn_asnetwork() %>%
sfn_network2graph()
sfn = roxel %>% sfn_asnetwork()
sfn
sfn$edges
install.packages('tidygraph')
require(tidygraph)
?tbl_graph
tbl_graph(nodes = sfn$nodes, edges = sfn$edges)
edges = sfn$edges
edges
edges = sfn$edges %>% select(nodeID_source, nodeID_target)
edges
edges = sfn$edges %>% select(nodeID_source, nodeID_target) %>% st_geometry(NULL)
edges
edges = sfn$edges %>% select(nodeID_source, nodeID_target) %>% st_set_geometry(NULL)
edges
tbl_graph(nodes = sfn$nodes, edges = edges)
tg = tbl_graph(nodes = sfn$nodes, edges = edges)
tg %>% activate(edges) %>% mutate(geometry = sfn$edges$geometry)
tg = tg %>% activate(edges) %>% mutate(geometry = sfn$edges$geometry)
plot(tg)
tg %>% ggraph()
install.packages(ggraph)
install.packages('graph')
install.packages('ggraph')
tg %>% ggraph()
require(ggraph)
require(ggraph)
tg %>% ggraph()
class(tg)
tg@nodes
tg$nodes
tg
tg %>% activate(nodes)
tg[edges]
tg['edges']
tg[[edges]]
V(tg)
require(igraph)
V(tg)
L(tg)
V(tg)[1]
ls(package = 'igraph')
ls(package = igraph)
ls('package:igraph')
tg
v(tg)
require(igraph)
V(tg)
as_tibble(tg)
as_tibble(tg) %>% as_sf()
as_tibble(tg) %>% st_as_sf()
as.data.frame(tg)
st_as_sf(tg)
vignette('sfnetworks', package = 'sfnetworks')
roxel
roxel %>% sfn_asnetwork()
g = roxel %>% sfn_asnetwork()
tbl_graph(nodes = g$nodes, edges = g$edges)
tbl_graph(nodes = g$nodes, edges = g$edges %>% select(nodeID_source, nodeID_target) %>% st_set_geometry(NULL))
tg = tbl_graph(nodes = g$nodes, edges = g$edges %>% select(nodeID_source, nodeID_target) %>% st_set_geometry(NULL))
tg %>% activate(edges) %>% mutate(geometry = g$edges$geometry)
class(tg)
betweenness(tg)
nrow(g$edges)
nrow(g$nodes)
tg
tg %>% activate(edges) %>% as_tibble()
tg = tg %>% activate(edges) %>% mutate(geometry = g$edges$geometry)
tg %>% activate(edges) %>% as_tibble()
tg %>% activate(edges) %>% as_tibble() %>% st_as_sf()
activate(tg, nodes)
